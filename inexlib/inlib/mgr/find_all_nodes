#!/bin/sh -f

save_dir="`pwd`"

cd ../inlib
_find FIELD_DESC_NODE_CLASS | grep NODE | sed 's:    INLIB_FIELD_DESC_NODE_CLASS(::g' | sed 's:)::g' > ${save_dir}/tmp_0

cd ${save_dir}

grep -v '#define' ./tmp_0 | grep -v INLIB_FIELD | grep -v 'inlib::sg::images' > ./tmp_1

# nodes without fields :
echo "inlib::sg::dummy_freetype" >> ./tmp_1

/bin/rm -f ./add_all

for item in $(cat ./tmp_1) ; do
  inc_file="`echo ${item} | sed 'sx::x/xg' | sed 's:inlib/::g'`"
  echo "#include \"${inc_file}\"" >> ./add_all
done

cat <<EOF >> ./add_all

namespace inlib {

inline void add_all(inlib::sg::group& a_grp,inlib::sg::base_freetype& a_ttf) {

EOF

for item in $(cat ./tmp_1) ; do
  inc_file="`echo ${item} | sed 'sx::x/xg'`"
  class_name="`basename ${inc_file}`"
  # virtual :
  if [ ${class_name} = base_camera ] ; then continue;fi
  if [ ${class_name} = base_list ] ; then continue;fi
  if [ ${class_name} = base_fch ] ; then continue;fi
  if [ ${class_name} = base_text ] ; then continue;fi
  if [ ${class_name} = base_freetype ] ; then continue;fi
  if [ ${class_name} = hips ] ; then continue;fi
  # template :
  if [ ${class_name} = image_grid ] ; then continue;fi
  if [ ${class_name} = button_grid ] ; then continue;fi
  if [ ${class_name} = geo ] ; then continue;fi
  if [ ${class_name} = holder ] ; then continue;fi
  if [ ${class_name} = hips ] ; then continue;fi
  if [ ${class_name} = selectable ] ; then continue;fi
  # special cstor :
  if [ ${class_name} = tex_rect_anim ] ; then continue;fi
  if [ ${class_name} = tex_sphere_anim ] ; then continue;fi
  if [ ${class_name} = switch_anim ] ; then continue;fi
  if [ ${class_name} = transporter_anim ] ; then continue;fi
  if [ ${class_name} = snow_anim ] ; then continue;fi
  if [ ${class_name} = rotate_anim ] ; then continue;fi
  if [ ${class_name} = parabolic_anim ] ; then continue;fi
  if [ ${class_name} = doc_anim ] ; then continue;fi
  if [ ${class_name} = cfitsio_stars ] ; then continue;fi
  # ttf :
  ttf_node=no
  if [ ${class_name} = plots ] ; then ttf_node=yes;fi
  if [ ${class_name} = text ] ; then ttf_node=yes;fi
  if [ ${class_name} = text_button ] ; then ttf_node=yes;fi
  if [ ${class_name} = image_text_button ] ; then ttf_node=yes;fi
  if [ ${class_name} = text_valop ] ; then ttf_node=yes;fi
  if [ ${class_name} = infos_box ] ; then ttf_node=yes;fi
  if [ ${class_name} = axis ] ; then ttf_node=yes;fi
  if [ ${class_name} = axes ] ; then ttf_node=yes;fi
  if [ ${class_name} = list ] ; then ttf_node=yes;fi
  if [ ${class_name} = numeric ] ; then ttf_node=yes;fi
  if [ ${class_name} = keyboard ] ; then ttf_node=yes;fi
  if [ ${class_name} = legend ] ; then ttf_node=yes;fi
  if [ ${class_name} = entry ] ; then ttf_node=yes;fi
  if [ ${class_name} = entries ] ; then ttf_node=yes;fi
  if [ ${class_name} = edvalop ] ; then ttf_node=yes;fi
  if [ ${class_name} = colors ] ; then ttf_node=yes;fi
  if [ ${class_name} = plotter ] ; then ttf_node=yes;fi
  if [ ${class_name} = h1d ] ; then ttf_node=yes;fi
  if [ ${class_name} = scroll_text ] ; then ttf_node=yes;fi
  if [ ${class_name} = scroll_infos ] ; then ttf_node=yes;fi

  item="`echo ${item} | sed 'sxinlib::xxg'`"
  
  if [ ${ttf_node} = yes ] ; then
    echo "  a_grp.add(new ${item}(a_ttf));" >> ./add_all
  else
    echo "  a_grp.add(new ${item});" >> ./add_all
  fi
done


cat <<EOF >> ./add_all
}

}
EOF

/bin/rm -f ./tmp_0 ./tmp_1

/bin/mv ./add_all ../inlib/.

cat <<EOF > ../tests/add_all.cpp
#include <inlib/add_all>
#include <inlib/sg/group>
#include <inlib/sg/dummy_freetype>
#include <cstdlib>
int main() {
  inlib::sg::group grp;
  inlib::sg::dummy_freetype ttf;
  inlib::add_all(grp,ttf);
  return EXIT_SUCCESS;
}
EOF
