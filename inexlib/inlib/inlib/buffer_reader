// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_buffer_reader
#define inlib_buffer_reader

// used in pmx to read mag field from cdf files.

#ifdef INLIB_MEM
#include "mem"
#endif

namespace inlib {

class buffer_reader {
public:
  buffer_reader(char* a_buffer,unsigned int a_len) //we take ownership of a_buffer.
  :m_buffer(a_buffer)
  ,m_eob(a_buffer+a_len)
  ,m_pos(a_buffer)
  {}
  virtual ~buffer_reader() {
    delete [] m_buffer;
#ifdef INLIB_MEM
    mem::decrement(s_new().c_str());
#endif
  }
protected:
  buffer_reader(const buffer_reader&):m_eob(0),m_pos(0){}
  buffer_reader& operator=(const buffer_reader&){return *this;}
public:
  void close() {}
  bool getline(char* a_buff,unsigned int a_len) {
    if(!a_len) return false;
    char* pos = a_buff;
    unsigned int len = a_len-1;
    char c;
    for(unsigned int i=0;i<len;i++) {
      if(m_pos>=m_eob) {
        *pos = 0;
        return true;
      }
      c = *m_pos;
      *pos = c;pos++;m_pos++;
      if(c=='\n') {
        *pos = 0;
        return true;
      }
    }
    a_buff[len] = 0;
    return true;
  }
  bool eof() const {return m_pos>=m_eob?true:false;}
protected:
  char* m_buffer;
  char* m_eob;
  char* m_pos;
};

}

#endif
