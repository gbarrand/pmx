// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file pmx.license for terms.

#ifndef pmx_pmx_evt_bsg_opener
#define pmx_pmx_evt_bsg_opener

#include <exlib/bsg_opener>
#include <inlib/wall/strings>

namespace pmx {

class evt_bsg_opener : public exlib::bsg_opener {
  typedef exlib::bsg_opener parent;
  INLIB_SCLASS(pmx::evt_bsg_opener)
public:
  virtual bool open(const std::string& a_path,
                    inlib::sg::viewer& a_viewer,
                    const inlib::args& a_args,
                    bool& a_done) const {
    inlib::args _args(a_args);
    _args.add(inlib::wall::s_placement(),inlib::wall::s_dynamic());
    bool status = parent::open(a_path,a_viewer,_args,a_done);
    inlib::sg::gui_viewer* _gv = inlib::sg::cast_gui_viewer(a_viewer);
    if(_gv) _gv->hide_main_menu();
    return status;
  }
public:
  evt_bsg_opener(const inlib::sg::bsg_factories& a_fac):parent(a_fac){}
  virtual ~evt_bsg_opener(){}
public:
  evt_bsg_opener(const evt_bsg_opener& a_from):parent(a_from){}
  evt_bsg_opener& operator=(const evt_bsg_opener& a_from) {
    parent::operator=(a_from);
    return *this;
  }  
};

}

#endif
